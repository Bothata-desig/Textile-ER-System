{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Textiles\\\\textiles-erp-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport LoginForm from \"./components/Auth/LoginForm\";\nimport AdminDashboard from \"./components/Dashboard/AdminDashboard\";\nimport HRDashboard from \"./components/Dashboard/HRDashboard\";\nimport UserDashboard from \"./components/Dashboard/UserDashboard\";\nimport \"./styles/Style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [role, setRole] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [darkMode]);\n  const handleLogout = () => setRole(null);\n  if (!role) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDarkMode(dm => !dm),\n          style: {\n            padding: \"10px 22px\",\n            borderRadius: \"6px\",\n            background: darkMode ? \"#e0e6f0\" : \"#2a3b4c\",\n            color: darkMode ? \"#232a36\" : \"#fff\",\n            border: \"none\",\n            fontWeight: 600,\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            transition: \"background 0.2s, color 0.2s\"\n          },\n          children: darkMode ? \"Light Mode\" : \"Dark Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: setRole\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [role === \"admin\" && /*#__PURE__*/_jsxDEV(AdminDashboard, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), role === \"hr\" && /*#__PURE__*/_jsxDEV(HRDashboard, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), role === \"user\" && /*#__PURE__*/_jsxDEV(UserDashboard, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mbtwC53sWnyktWevGMVpWNpIxrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LoginForm","AdminDashboard","HRDashboard","UserDashboard","jsxDEV","_jsxDEV","App","_s","role","setRole","darkMode","setDarkMode","document","body","classList","add","remove","handleLogout","className","children","onClick","dm","style","padding","borderRadius","background","color","border","fontWeight","fontSize","cursor","transition","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Textiles/textiles-erp-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LoginForm from \"./components/Auth/LoginForm\";\nimport AdminDashboard from \"./components/Dashboard/AdminDashboard\";\nimport HRDashboard from \"./components/Dashboard/HRDashboard\";\nimport UserDashboard from \"./components/Dashboard/UserDashboard\";\nimport \"./styles/Style.css\";\n\nconst App: React.FC = () => {\n  const [role, setRole] = useState<string | null>(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n  }, [darkMode]);\n\n  const handleLogout = () => setRole(null);\n\n  if (!role) {\n    return (\n      <div className=\"centered-container\">\n        <div className=\"dashboard-container\">\n            <button\n        onClick={() => setDarkMode(dm => !dm)}\n        style={{\n          padding: \"10px 22px\",\n          borderRadius: \"6px\",\n          background: darkMode ? \"#e0e6f0\" : \"#2a3b4c\",\n          color: darkMode ? \"#232a36\" : \"#fff\",\n          border: \"none\",\n          fontWeight: 600,\n          fontSize: \"1rem\",\n          cursor: \"pointer\",\n          transition: \"background 0.2s, color 0.2s\"\n        }}\n      >\n        {darkMode ? \"Light Mode\" : \"Dark Mode\"}\n      </button>\n          <LoginForm onLogin={setRole} />\n           \n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {role === \"admin\" && (\n        <AdminDashboard darkMode={darkMode} setDarkMode={setDarkMode} onLogout={handleLogout} />\n      )}\n      {role === \"hr\" && (\n        <HRDashboard darkMode={darkMode} setDarkMode={setDarkMode} onLogout={handleLogout} />\n      )}\n      {role === \"user\" && (\n        <UserDashboard darkMode={darkMode} setDarkMode={setDarkMode} onLogout={handleLogout} />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}